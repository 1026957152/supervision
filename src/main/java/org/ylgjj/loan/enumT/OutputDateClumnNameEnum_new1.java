package org.ylgjj.loan.enumT;

//import com.coalvalue.domain.pojo.ListItem;


/**
 * Created by silence on 2016/1/18.
 */
public enum OutputDateClumnNameEnum_new1 {
    序号 ("0", "序号",0,"",2000),
    姓名 ("0", "姓名",1,"",2000),
    身份证号 ("1", "身份证号",2,"",5000),
    单位编号 ("3", "单位编号",4,"",6000),
    借款人单位性质 ("3", "借款人单位性质",5,"",6000),
    借款人单位地址 ("4", "借款人单位地址",6,"",6000),

    贷款金额 ("4", "贷款金额",7,"",3000),



    贷款剩余金额 ("9", "贷款剩余金额",8,"",6000),




    担保方式 ("0", "担保方式",9,"",2000),
    贷款用途 ("1", "贷款用途",10,"",2000),
    贷款期限 ("2", "贷款期限",11,"",2000),
    贷款剩余期限 ("3", "贷款剩余期限",12,"",3000),
    放款时间 ("4", "放款时间",13,"",3000),
    放款标志 ("9", "放款标志",14,"",2000),


    结清标志 ("0", "结清标志",15,"",3000),
    借款人类型 ("1", "借款人类型",16,"",3000),
   // 借款人公积金帐号 ("2", "借款人公积金帐号",17,"",6000),
    公积金帐号开户日期 ("2", "公积金帐号开户日期",18,"",3000),

    公积金帐号 ("2", "公积金帐号",19,"",4000),

    公积金帐号余额 ("2", "公积金帐号余额",20,"",3000),
    公积金帐号状态 ("2", "公积金帐号状态",21,"",3000),
    公积金帐号上次提取日期 ("2", "公积金帐号上次提取日期",22,"",3000),
    公积金帐号上次业务日期 ("2", "公积金帐号上次业务日期",23,"",3000),










    借款人贷款合同号("3", "借款人贷款合同号",24,"",5000),



/*    借款人贷款总额("3", "借款人贷款总额",19,""),
    借款人贷款笔数("3", "借款人贷款笔数",20,""),
    借款人该笔贷款逾期次数 ("4", "借款人该笔贷款逾期次数",21,""),*/





    系统记录逾期次数("9", "系统记录逾期次数",25,"",2000),

    系统记录累计欠还次数("9", "系统记录累计欠还次数",26,"",2000),


/*    借款人该笔贷款首次逾期日期 ("9", "--借款人该笔贷款首次逾期日期",24,""),*/





    收款人名称账户户称("4", "收款人名称账户户称",27,"",6000),
    收款人类型 ("9", "收款人类型",28,"",3000),
    收款账户银行名称 ("9", "收款账户银行名称",29,"",6000),
    收款银行帐号("4", "收款银行帐号",30,"",6000),
    收款人账户身份证号("4", "收款人账户身份证号",31,"",6000),




    担保人数("4", "担保人数",32,"",6000),

    担保人1("4", "担保人1",33,"",6000),
    担保人1变跟类型("4", "担保人1变跟类型",34,"",6000),
    担保人1电话 ("9", "担保人1电话",35,"",6000),

    担保人2("4", "担保人2",36,"",6000),
    担保人2变跟类型("4", "担保人2变跟类型",37,"",6000),

    担保人2电话 ("9", "担保人2电话",38,"",6000),


    担保人3("4", "担保人3",39,"",6000),
    担保人3变跟类型("4", "担保人3变跟类型",40,"",6000),

    担保人3电话 ("9", "担保人3电话",41,"",6000),

    担保人4("4", "担保人4",42,"",6000),
    担保人4变跟类型("4", "担保人4变跟类型",43,"",6000),

    担保人4电话 ("9", "担保人4电话",44,"",6000),

    担保人5("4", "担保人5",45,"",6000),
    担保人5变跟类型("4", "担保人5变跟类型",46,"",6000),

    担保人5电话 ("9", "担保人5电话",47,"",6000),


    公积金提取详情 ("9", "公积金提取详情",48,"",14000),

    是否贷款后提取 ("9", "是否贷款后提取",49,"",3000),

    贷款后首次提取金额_时间_原因 ("9", "贷款后首次提取金额/时间/原因",50,"",10000),

    贷款后提取次数 ("9", "贷款后提取次数",51,"",4000),
    贷款后提取提取金额 ("9", "贷款后提取提取金额",52,"",4000),

    全部提取次数 ("9", "全部提取次数",53,"",2000),

    全部提取金额 ("9", "全部提取金额",54,"",2000),



    是否贷款后提取_除去_强制扣划公积金还贷款 ("9", "是否贷款后提取_除去_强制扣划公积金还贷款",55,"",2500),
    贷款后首次提取金额_时间_原因_除去_强制扣划公积金还贷款 ("9", "贷款后首次提取金额_时间_原因_除去_强制扣划公积金还贷款",56,"",10000),
    强制扣划公积金还贷款金额 ("9", "强制扣划公积金还贷款金额",57,"",6000),
    强制扣划公积金还贷款次数 ("9", "强制扣划公积金还贷款次数",58,"",6000),


    贷款后除强制扣划公积金还贷款提取外提取次数 ("9", "贷款后除强制扣划公积金还贷款提取外提取次数",59,"",9000),
    贷款后除强制扣划公积金还贷款提取外提取总额 ("9", "贷款后除强制扣划公积金还贷款提取外提取总额",60,"",9000),


    贷款申请柜员名称 ("9", "贷款申请柜员名称",61,"",6000),
    贷款申请柜员ID ("9", "贷款申请柜员ID",62,"",6000),
    贷款审批柜员名称 ("9", "贷款审批柜员名称",63,"",6000),
    贷款审批批准柜员名称 ("9", "贷款审批批准柜员名称",64,"",6000),
    贷款审批批准柜员ID ("9", "贷款审批批准柜员ID",65,"",6000),

    贷款审批柜员ID ("9", "贷款审批柜员ID",66,"",6000),
    流程详情 ("9", "流程详情",67,"",6000),
    贷款分户类型 ("9", "贷款分户类型",68,"",6000),


    贷款上日余额 ("9", "贷款上日余额",69,"",6000),
    贷款当前余额 ("9", "贷款当前余额",70,"",6000),
    贷款日终余额 ("9", "贷款日终余额",71,"",6000),


    首次逾期时间 ("9", "首次逾期时间",72,"",6000),
    首次逾期时该期初始本金 ("9", "首次逾期时该期初始本金",73,"",6000),
    首次逾期时该期应还本金 ("9", "首次逾期时该期应还本金",74,"",6000),
    逾期详情 ("9", "首次逾期时该期应还本金",75,"",6000),




    首次逾期序号 ("9", "首次逾期序号",76,"",6000),
    计算累积逾期次数("9", "计算累积逾期次数",77,"",6000),
    计算当前逾期次数("9", "计算当前逾期次数",78,"",6000),

    合同终止日期 ("9", "合同终止日期",79,"",3000),


    系统记录首次还款计划时间 ("9", "系统记录首次还款计划时间",80,"",9000),
    系统记录首次还款计划初始本金 ("9", "系统记录首次还款计划初始本金",81,"",9000),
    系统记录首次还款计划应还本金 ("9", "系统记录首次还款计划应还本金",82,"",9000),
    系统记录首次还款计划欠还本金 ("9", "系统记录首次还款计划欠还本金",83,"",9000),
    系统记录强扣次数 ("9", "系统记录强扣次数",84,"",6000),

    以经过贷款期限 ("9", "以经过贷款期限",85,"",6000),
    系统记录累积逾期次数占比("9", "系统记录累积逾期次数占比",86,"",6000),
    计算累积逾期次数占比("9", "计算累积逾期次数占比",87,"",6000),
    系统有记录以来逾期累计占比("9", "系统有记录以来逾期累计占比",88,"",6000),




    借款人信息("9", "借款人信息",89,"",20000),
    担保信息("9", "担保信息",90,"",20000),
    综合信息("9", "综合信息",91,"",10000),

    变更数("9", "变更数",92,"",10000),

    银行简称("9", "银行简称",93,"",10000),
    银行简称2("9", "银行简称2",94,"",10000),
    银行名称("9", "银行名称",95,"",10000),



    提取时间("9", "提取时间",96,"",3000),
    提取原因("9", "提取原因",97,"",3000),
    提取后余额("9", "提取后余额",98,"",3000),
    提取结果("9", "提取结果",99,"",3000),

    提取金额("9", "提取金额",100,"",3000),

    贷款结清日期 ("9", "贷款结清日期",101,"",3000),


    担保人姓名 ("9", "担保人姓名",102,"",3000),
    担保人身份证号 ("9", "担保人身份证号",103,"",3000),

    担保人单位 ("9", "担保人单位",104,"",3000),
    担保人单位编号 ("9", "担保人单位编号",105,"",3000),

    年龄是否违规 ("2", "年龄是否违规",106,"",3000),
    借款人出生日期 ("2", "借款人出生日期",107,"",3000),

    借款人出生加18 ("2", "借款人出生加18",108,"",3000),
    借款人出生加60 ("2", "借款人出生加16",109,"",3000),



    缴存人联系电话 ("2", "缴存人联系电话",110,"",3000),


    单位联系人 ("2", "单位联系人",111,"",3000),

    单位联系电话 ("2", "缴存人联系电话",112,"",3000),

    提取违规贷款信息 ("2", "提取违规贷款信息",113,"",20000),
    提取人姓名 ("2", "提取人姓名",114,"",2000),

    提取人身份证号 ("2", "提取人身份证号",115,"",4000),




    单位名称_UNIT ("2", "单位名称_UNIT",116,"",4000),

    单位联系人_UNIT ("2", "单位联系人_UNIT",117,"",4000),

    单位联系电话_UNIT ("2", "单位联系电话_UNIT",118,"",4000),

    借款人单位地址_UNIT ("2", "提取人身份证号",119,"",4000),

    借款人单位性质_UNIT ("2", "提取人身份证号",120,"",4000),


    抵押人姓名_MORTGAGER ("2", "抵押人姓名_MORTGAGER",121,"",4000),
    抵押人身份证_MORTGAGER ("2", "抵押人身份证_MORTGAGER",122,"",4000),
    抵押人变更类型_MORTGAGER ("2", "抵押人变更类型_MORTGAGER",123,"",4000),
    抵押人变更原因_MORTGAGER ("2", "抵押人变更原因_MORTGAGER",124,"",4000),
    抵押人操作时间_MORTGAGER ("2", "抵押人操作时间_MORTGAGER",125,"",4000),




    抵押物地址_MORTGAGER_GOOD ("2", "抵押物地址_MORTGAGER_GOOD",126,"",4000),
    抵押物类型_MORTGAGER_GOOD ("2", "抵押物类型_MORTGAGER_GOOD",127,"",4000),
    抵押物性质_MORTGAGER_GOOD ("2", "抵押物性质_MORTGAGER_GOOD",128,"",4000),
    抵押物变更类型_MORTGAGER_GOOD ("2", "抵押物变更类型_MORTGAGER_GOOD",129,"",4000),
    抵押物变更原因_MORTGAGER_GOOD ("2", "抵押物变更原因_MORTGAGER_GOOD",130,"",4000),

    抵押物状态_MORTGAGER_GOOD ("2", "抵押物状态_MORTGAGER_GOOD",131,"",4000),

    抵押物操作时间_MORTGAGER_GOOD ("2", "抵押物操作时间_MORTGAGER_GOOD",132,"",4000),



    保证信息("2", "保证信息",133,"",4000),

    合同信息("9", "合同信息",134,"",20000),






    单位名称("9", "单位名称",135,"",5000),


    类型("9", "类型",136,"",2000),
    年龄("9", "年龄",137,"",2000),


    婚姻状态("9", "婚姻状态",138,"",2000),







    他项权证号("9", "他项权证号",139,"",5000),
    有无公正("9", "有无公正",140,"",2000),
    缴存情况("9", "缴存情况",141,"",2000),
    缴存余额("9", "缴存余额",142,"",2000),
    支取情况("9", "支取情况",143,"",2000),
    贷款发放银行("9", "贷款发放银行",144,"",2000),
    贷款余额("9", "贷款余额",145,"",2000),


    调查人("9", "调查人",146,"",2000),
    贷款初审人("9", "贷款初审人",147,"",2000),
    复审人("9", "复审人",148,"",2000),
    审批人("9", "审批人",149,"",2000),
    担保人贷款编号("9", "担保人贷款编号",150,"",2000),




    借款人姓名("9", "借款人姓名",151,"",2000),
    借款人身份证号("9", "借款人身份证号",152,"",2000),
    借款人单位编号("9", "借款人单位编号",153,"",2000),
    借款人公积金帐号("9", "借款人公积金帐号",154,"",2000),
    借款人公积金帐号余额("9", "借款人公积金帐号余额",155,"",2000),
    借款人公积金帐号状态("9", "借款人公积金帐号状态",156,"",2000),


 贷款笔数("9", "贷款笔数",157,"",2000),
 贷款概要("9", "贷款概要",158,"",10000),






    ;











    private final String statusText;
    private final String displayText;
    private final Integer id;
    private final Integer columnWidth;

    private String helpMessage;

    public Integer getColumnWidth() {
        return columnWidth;
    }

    public String getHelpMessage() {
        return helpMessage;
    }

    public void setHelpMessage(String helpMessage) {
        this.helpMessage = helpMessage;
    }

    public String getDisplayText() {
        return displayText;
    }

    OutputDateClumnNameEnum_new1(String statusText, String displayText, Integer id, String helpMessage, Integer columnWidth) {
        this.statusText = statusText;
        this.displayText = displayText;

        this.id = id;
        this.helpMessage = helpMessage;
        this.columnWidth = columnWidth;
    }
    public String getText() {
        return this.statusText;
    }

    public Integer getId() {
        return this.id;
    }

/*
    public static List<ListItem> retriveTypese() {

        List<ListItem> list = new ArrayList<ListItem>();
        for (AccountingVoucherStatusEnum status : AccountingVoucherStatusEnum.values()) {
            ListItem element = new ListItem(status.getId(), status.getDisplayText(), status.getHelpMessage());
            list.add(element);
        }

        return list;

    }


    public static List<ListItem> retriveTypese(String statusText) {

        List<ListItem> list = new ArrayList<ListItem>();
        for(PersonalAccountStatusEnum status : PersonalAccountStatusEnum.values()) {
            ListItem element = new ListItem(status.getText(), status.getDisplayText());
            if (status.getText().equals(statusText)){
                element.setSelected(true);
            }
            list.add(element);
        }
        return list;

    }*/



    public static OutputDateClumnNameEnum fromString(String text) {
        for (OutputDateClumnNameEnum status : OutputDateClumnNameEnum.values()) {
            if (status.getText().equals(text) ) {
                return status;
            }
        }
        throw new RuntimeException("no customer status " + text);
    }

    public static OutputDateClumnNameEnum fromInt(Integer text) {
        for (OutputDateClumnNameEnum status : OutputDateClumnNameEnum.values()) {
            if (status.getId().equals(text) ) {
                return status;
            }
        }
        throw new RuntimeException("no customer status " + text);
    }

}
